In the second router we should add new filter function called countryPopulation to the existing transform message component
This function  accepts integer as a parameter(this parameter should be our "population" queryParameter that we stored previous into the variable called "populationVar") and can filter countries  by ` population `field.  `name/common` field based on the payload example that we have in our RAML specification.
The filter should search for countries where the population is less than provided number from "populationVar" variable in the millions of people (e.g., by providing value `10`, I should find countries with a population less than 10m)
If "population" queryParameter=zero(0) - no filtering is performing

===================================================================================================
You can extend the current DataWeave script in the second router to include the countryPopulation function. Here's how you can incorporate the new filter:

%dw 2.0
output application/json

fun countryName(name) = 
    if (name != "") 
        payload filter (country) -> lower(country.name.common) contains lower(name)
    else 
        payload

fun countryPopulation(population) = 
    if (population > 0)
        payload filter (country) -> country.population < (population * 1000000)
    else
        payload

---
countryName(vars.nameVar) 
when (vars.nameVar != "" and vars.populationVar == 0) 
otherwise countryPopulation(vars.populationVar)
when (vars.nameVar == "" and vars.populationVar > 0) 
otherwise payload filter (country) -> (lower(country.name.common) contains lower(vars.nameVar)) and (country.population < (vars.populationVar * 1000000))


This script provides the following logic:

If only the name query parameter is provided (and has a value other than ""), it filters based on the country name.
If only the population query parameter is provided (and has a value other than 0), it filters based on the country population.
If both the name and population query parameters are provided, it filters by both conditions.
If neither query parameter is provided, it returns all countries (no filtering).
This should satisfy your requirements.
==================================================
Are you sure we can use this keywords - when and otherwise?I cant find them in mule 4 DataWeave documentation.(not exists)Can you fix this or provide another solution?
=====================================================================================
You're right. My apologies for that oversight. In Mule 4's DataWeave, the syntax doesn't include when and otherwise.

To handle the multiple conditions based on the query parameters, we can make use of the conditional logic using if/else.

Here's an updated solution for the logic:

%dw 2.0
output application/json

fun countryName(countries, name) = 
    if (name != "") 
        countries filter (country) -> lower(country.name.common) contains lower(name)
    else 
        countries

fun countryPopulation(countries, population) = 
    if (population > 0)
        countries filter (country) -> country.population < (population * 1000000)
    else
        countries

---

if (vars.nameVar != "" and vars.populationVar == 0)
    countryName(payload, vars.nameVar)
else if (vars.nameVar == "" and vars.populationVar > 0)
    countryPopulation(payload, vars.populationVar)
else if (vars.nameVar != "" and vars.populationVar > 0)
    countryName(payload, vars.nameVar) filter (country) -> country.population < (vars.populationVar * 1000000)
else
    payload
